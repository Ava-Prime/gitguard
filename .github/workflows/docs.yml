name: Deploy Documentation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Detect documentation type
  detect:
    runs-on: ubuntu-latest
    outputs:
      doc-type: ${{ steps.detect.outputs.type }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect documentation type
        id: detect
        run: |
          if [ -f "docs/_config.yml" ]; then
            echo "type=jekyll" >> $GITHUB_OUTPUT
          elif [ -f "mkdocs.yml" ]; then
            echo "type=mkdocs" >> $GITHUB_OUTPUT
          else
            echo "type=jekyll" >> $GITHUB_OUTPUT
          fi

  # Build job for Jekyll
  build-jekyll:
    if: needs.detect.outputs.doc-type == 'jekyll'
    runs-on: ubuntu-latest
    needs: detect
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          cd docs
          bundle install

      - name: Build with Jekyll
        run: |
          cd docs
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_site

  # Build job for MkDocs
  build-mkdocs:
    if: needs.detect.outputs.doc-type == 'mkdocs'
    runs-on: ubuntu-latest
    needs: detect
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/requirements*.txt', 'mkdocs.yml') }}

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs-material
          pip install mkdocs-mermaid2-plugin
          pip install mkdocs-awesome-pages-plugin

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build documentation
        run: mkdocs build --clean --strict

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [detect, build-jekyll, build-mkdocs]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Link checker job
  link-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [detect, build-jekyll, build-mkdocs]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: ./site

      - name: Extract site
        run: |
          cd site
          tar -xf artifact.tar

      - name: Check links
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress './site/**/*.html'
          fail: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
